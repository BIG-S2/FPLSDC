% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add.R
\name{fpls_dc}
\alias{fpls_dc}
\title{Functional partial least squares through
distance covariance.}
\usage{
fpls_dc(X, Y)
}
\arguments{
\item{X}{A numeric matrix, or dataframe. Each column is an observation vector.}

\item{Y}{A numeric matrix, or dataframe.}
}
\value{
\item{rank}{The index of all predictors ranked by FPLS-DC.}
}
\description{
Functional partial least squares through
distance covariance(FPLS-DC). FPLS-DC can be used to presents a new feature screening procedure for all
components of \code{X}.
}
\examples{
library(FPLSDC)
library(energy)
n <- 200
  feature_num <- 50
  sigma_sqrt <- matrix(NA,feature_num,feature_num)
  for (i in seq(feature_num)) {
    for (j in seq(feature_num)) {
      if (i == j){
        sigma_sqrt[i,j] = 1
      }
      else
        sigma_sqrt[i,j] = 0.5^abs(i-j)
    }
  }
  X <- mvrnorm(n = n, mu = rep(0,feature_num), Sigma = sigma_sqrt)
### linear case
  Y <- matrix(rnorm(n*200),n,200)
    for (j in 51:150) {
        Y[,j] <-  Y[,j] + ((2/sqrt(12))*((0.002*j)^(-1))*X[,1] + (2/sqrt(12))*((0.002*j)^(-1))*(X[,2])+(2/sqrt(12))*((0.002*j)^(-1))*X[,3])
    }
rank.dcov <- fpls_dc(X,Y)
### non-linear case

  Y <- matrix(rnorm(n*200),n,200)
    for (j in 51:150) {
        Y[,j] <-  Y[,j] + ((2/sqrt(12))*((0.002*j)^(-1))*X[,1] + (2/sqrt(12))*((0.002*j)^(-1))*(X[,2])+(2/sqrt(12))*((0.002*j)^(-1))*X[,3])^2
    }
rank.dcov <- fpls_dc(X,Y)
}
